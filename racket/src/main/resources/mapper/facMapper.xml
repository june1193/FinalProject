<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.facMapper">

<!-- 총 데이터 건수 -->
<select id="selectTotalCount" resultType="int" parameterType="java.util.Map">
	select count(*) from facilityTbl 
		<where>
			<if test="options != null and options.sport != null">
				<choose>	
					<when test="options.sport == 'all'">
						minclassname like '%%'
					</when>
					<otherwise>
						minclassname like concat ('%',#{options.sport},'%')
					</otherwise>
				</choose>
			</if>
			<if test="options.region != null and options.region.size() > 0">
				and region_name in
				<foreach collection="options.region" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="options.payment != null and options.payment.size() > 0">
				and payment in
				<foreach collection="options.payment" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="options.status != null and options.status.size() > 0">
				and service_status in
				<foreach collection="options.status" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="options.target != null and options.target != ''">
				and service_target regexp #{options.target}
			</if>
			<if test="options.search != null and options.search != ''">
				and facName like concat ('%',#{options.search},'%')
			</if>
		</where>
</select>

<!-- 전체 시설 목록 불러옴(필터, 검색 포함) -->
<select id="selectFilter" resultType="FacDTO" parameterType="java.util.Map">
	select facilityID, minclassname, service_status,  facName, payment, service_target, image, region_name, place, (select count(*) from bookmarktbl where facilityID = f.facilityID ) count , 
	ifnull((select user_ID from bookmarktbl where facilityID = f.facilityID and user_ID = #{user}), 0) liked,
	format(ifnull((select avg(rating) from reviewtbl where facilityID = f.facilityID), 0.0 ),1) rating 
	from facilitytbl f
	<where>
		<if test="options != null and options.sport != null">
			<choose>	
				<when test="options.sport == 'all'">
					minclassname like '%%'
				</when>
				<otherwise>
					minclassname like concat ('%',#{options.sport},'%')
				</otherwise>
			</choose>
		</if>
		<if test="options.region != null and options.region.size() > 0">
			and region_name in
			<foreach collection="options.region" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="options.payment != null and options.payment.size() > 0">
			and payment in
			<foreach collection="options.payment" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="options.status != null and options.status.size() > 0">
			and service_status in
			<foreach collection="options.status" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="options.target != null and options.target != ''">
			and service_target regexp #{options.target}
		</if>
		<if test="options.search != null and options.search != ''">
			and facName like concat ('%',#{options.search},'%')
		</if>
	</where>
	ORDER BY CASE 
         WHEN service_status = '접수중' THEN 1
         WHEN service_status = '안내중' THEN 2 
         WHEN service_status = '예약일시중지' THEN 3
         WHEN service_status = '예약마감' THEN 4
         ELSE 5
         END
         limit #{limit} offset #{offset}	
</select>

<!-- 특정 시설 상세보기 -->
<select id="selectDesc" resultType="facDTO" parameterType="java.util.Map">
	select * ,(select count(*) from bookmarktbl where facilityID = f.facilityID ) count , 
	ifnull((select user_ID from bookmarktbl where facilityID = f.facilityID and user_ID = #{user}), 0) liked,
	format(ifnull((select avg(rating) from reviewtbl where facilityID = f.facilityID), 0.0 ),1) rating
	from facilitytbl f
	where facilityID = #{facID}
</select>	

<!-- 회원 정보 받아오기 -->
<select id="selectUser" resultType="java.util.Map">
	select user_Image_Url, user_Nickname,user_ID from usertbl where user_ID = #{user};
</select>

<!-- api에서 받은 데이터 db에 insert -->
<insert id="insert" parameterType="java.util.List">
      insert into facilityTbl values
           <foreach collection="list" item="item" separator=",">
            (
            #{item.facilityID},
            #{item.minclassname},
            #{item.service_status},
            #{item.facName},
            #{item.payment},
            #{item.place},
            #{item.service_target},
            #{item.url},
            #{item.location_x},
            #{item.location_y},
            #{item.service_start_day},
            #{item.service_end_day},
            #{item.reception_start_date},
            #{item.reception_end_date},
            #{item.region_name},
            #{item.image},
            #{item.details},
            #{item.tel_num},
            #{item.service_start_time},
            #{item.service_end_time}
            )
        </foreach>
  </insert>
  
<!-- 북마크에 아이디 존재하는지 확인 -->
<select id="checkBookmark" resultType="int" parameterType="java.util.Map">
	select count(*) from bookmarktbl where facilityID = #{facID} and user_ID = #{user}
</select>

<!-- 북마크 삭제 -->
<delete id="deleteBookmark" parameterType="java.util.Map">
	delete from bookmarktbl where facilityID = #{facID} and user_ID = #{user}
</delete>

<!-- 북마크 추가 -->
<insert id="insertBookmark">
	insert into bookmarktbl values(#{facID}, #{user});
</insert>

<!-- 북마크 수 조회 -->
<select id="countBookmark" parameterType="String" resultType="int">
	select count(*) from bookmarktbl where facilityID = #{facID}
</select>


<!-- 리뷰 등록 -->
<insert id="insertReview" parameterType="java.util.Map">
	insert into reviewtbl values (#{facID}, #{user}, #{content}, #{rating}, SYSDATE());
</insert>

<!-- 리뷰 조회 -->
<resultMap type="reviewDTO" id="selectReviewMap">
	<result property="userID" column="user_ID"/>
	<result property="userImageUrl" column="user_Image_Url"/>
    <result property="userNickname" column="user_Nickname"/>
    <result property="rating" column="rating"/>
    <result property="reviewText" column="review_Text"/>
    <result property="date" column="insert_time"/>
</resultMap>
<select id="selectReview" parameterType="String" resultMap="selectReviewMap">
	select u.user_ID, u.user_Image_Url,u.user_Nickname,r.rating,r.review_Text, DATE_FORMAT(r.insert_time, '%Y.%m.%d %H:%i') insert_time  from reviewtbl r
	join usertbl u
	on r.user_ID = u.user_ID where r.facilityID = #{facID} order by insert_time desc
</select>

<!-- 리뷰 삭제 -->
<delete id="deleteReview" parameterType="java.util.Map">
	delete from reviewtbl where facilityID = #{facID} and user_ID = #{user}
</delete>

<!-- 리뷰 수정 -->
<update id="updateReview" parameterType="java.util.Map">
	update reviewtbl set rating = #{rating}, review_Text = #{text}, insert_time = SYSDATE() where facilityID = #{facID} and user_ID = #{user}
</update>

<!-- 평균 별점 -->
<select id="avgRating" parameterType="String" resultType="String">
	select format( avg(rating),1) rating from reviewtbl where facilityID = #{facID}
</select>
</mapper>
